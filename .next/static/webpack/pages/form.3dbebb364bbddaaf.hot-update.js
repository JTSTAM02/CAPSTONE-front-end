"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/form",{

/***/ "./src/pages/form/index.js":
/*!*********************************!*\
  !*** ./src/pages/form/index.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\nvar _s = $RefreshSig$();\n\n\nconst QAForm = ()=>{\n    _s();\n    const [showRandomMovie, setShowRandomMovie] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [randomMovie, setRandomMovie] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [selectedGenre, setSelectedGenre] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const fetchRandomMovieByGenre = ()=>{\n        axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"http://localhost:8000/api/get_random_movie/?genre=\".concat(selectedGenre)).then((response)=>{\n            const results = response.data.results;\n            const randomIndex = Math.floor(Math.random() * results.length);\n            setRandomMovie(results[randomIndex]);\n            setShowRandomMovie(true);\n        }).catch((error)=>{\n            console.error(error);\n        });\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                children: \"What genre of movie would you like to watch?\"\n            }, void 0, false, {\n                fileName: \"/Users/tylerstamm/Documents/Capstone/CAPSTONE-front-end/src/pages/form/index.js\",\n                lineNumber: 24,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                value: selectedGenre,\n                onChange: (event)=>setSelectedGenre(event.target.value),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                        value: \"\",\n                        children: \"Select Genre\"\n                    }, void 0, false, {\n                        fileName: \"/Users/tylerstamm/Documents/Capstone/CAPSTONE-front-end/src/pages/form/index.js\",\n                        lineNumber: 26,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                        value: \"Comedy\",\n                        children: \"Comedy\"\n                    }, void 0, false, {\n                        fileName: \"/Users/tylerstamm/Documents/Capstone/CAPSTONE-front-end/src/pages/form/index.js\",\n                        lineNumber: 27,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/tylerstamm/Documents/Capstone/CAPSTONE-front-end/src/pages/form/index.js\",\n                lineNumber: 25,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: fetchRandomMovieByGenre,\n                children: \"Get Random Movie\"\n            }, void 0, false, {\n                fileName: \"/Users/tylerstamm/Documents/Capstone/CAPSTONE-front-end/src/pages/form/index.js\",\n                lineNumber: 31,\n                columnNumber: 7\n            }, undefined),\n            showRandomMovie && randomMovie && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"movie-info\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        children: \"Your Random Movie Is:\"\n                    }, void 0, false, {\n                        fileName: \"/Users/tylerstamm/Documents/Capstone/CAPSTONE-front-end/src/pages/form/index.js\",\n                        lineNumber: 35,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: randomMovie.titleText.text\n                    }, void 0, false, {\n                        fileName: \"/Users/tylerstamm/Documents/Capstone/CAPSTONE-front-end/src/pages/form/index.js\",\n                        lineNumber: 36,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Year of Release: \",\n                            randomMovie.releaseYear.year\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/tylerstamm/Documents/Capstone/CAPSTONE-front-end/src/pages/form/index.js\",\n                        lineNumber: 37,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                        src: randomMovie.primaryImage.url,\n                        alt: \"Movie Poster\",\n                        style: {\n                            maxWidth: \"200px\",\n                            maxHeight: \"200px\"\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/tylerstamm/Documents/Capstone/CAPSTONE-front-end/src/pages/form/index.js\",\n                        lineNumber: 38,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/tylerstamm/Documents/Capstone/CAPSTONE-front-end/src/pages/form/index.js\",\n                lineNumber: 34,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/tylerstamm/Documents/Capstone/CAPSTONE-front-end/src/pages/form/index.js\",\n        lineNumber: 23,\n        columnNumber: 5\n    }, undefined);\n};\n_s(QAForm, \"qBfcK2U5xwGYPz5Ll7+i8kFx+X8=\");\n_c = QAForm;\n/* harmony default export */ __webpack_exports__[\"default\"] = (QAForm); // import React, { useState, useEffect } from 'react';\n // import 'bootstrap/dist/css/bootstrap.min.css';\n // import axios from 'axios';\n // import Navigation from '../../components/Navigation';\n // import FinalRecommendation from '../../components/FinalRecommendation';\n // import Link from 'next/link';\n // const QAForm = () => {\n //   const [showRandomMovie, setShowRandomMovie] = useState(false);\n //   const [randomMovie, setRandomMovie] = useState(null);  \n //   const [currentQuestion, setCurrentQuestion] = useState(0);\n //   const [isFirstSlide, setIsFirstSlide] = useState(true);\n //   const [selectedAnswer, setSelectedAnswer] = useState('');\n //   const [userAnswers, setUserAnswers] = useState([]);\n //   const [recommendedMovie, setRecommendedMovie] = useState(null);\n //   const [showRecommendation, setShowRecommendation] = useState(false);\n //   const [isModalVisible, setIsModalVisible] = useState(false);\n //   const [questionsAnswered, setQuestionsAnswered] = useState(false);\n //   const [loadingRandomMovie, setLoadingRandomMovie] = useState(false);\n //   const [selectedGenre, setSelectedGenre] = useState('')\n //   useEffect(() => {\n //     const storedFirstSlide = localStorage.getItem(\"isFirstSlide\");\n //     if (storedFirstSlide !== null) {\n //       setIsFirstSlide(JSON.parse(storedFirstSlide));\n //     }\n //   }, []);\n //   const questions = [\n //     \"All Questions are optional. Feel free to answer all of them, or as many as you want. Once you have chosen your answer, please click Next.\",\n //     // \"What kind of mood are you in?\",\n //     \"What genre of movie would you like to watch?\",\n //     // \"What decade of movie would you like to watch?\",\n //     // \"About How long do you want to watch a movie?\",\n //     // \"What rating movie would you like to see?\",\n //     // \"Finally, do you want to watch movies that have won any special awards?\"\n //   ];\n //   const answers = [\n //     [],\n //     // [\"Happy\", \"Sad\", \"Excited\", \"Calm\", \"Bored\"],\n //     [\"Action\", \"Animation\", \"Comedy\", \"Crime\", \"Drama\", \"Family\", \"Horror\", \"Sport\", \"Western\"],\n //     // [\"1950s\", \"1960s\", \"1970s\", \"1980s\", \"1990s\", \"2000s\", \"2010s\", \"2020s\"],\n //     // [\"Less than 90 minutes\", \"About 2 hours\", \"2-3 hours\",\"Longer than 3 Hours\", \"No preference\"],\n //     // [\"G\", \"PG\", \"PG-13\", \"R\"],\n //     // [\"Yes\", \"No\", \"No Preference\"]\n //   ];\n //   const fetchRandomMovie = () => {\n //     axios.get('http://localhost:8000/api/get_random_movie/')\n //       .then(response => {\n //         const results = response.data.results;\n //         const randomIndex = Math.floor(Math.random() * results.length);\n //         setIsModalVisible(true); // Show the modal when random movie is fetched\n //         setRandomMovie(results[randomIndex]);\n //         setShowRandomMovie(true);\n //       })\n //       .catch(error => {\n //         console.error(error);\n //       });\n //   };\n //   const handleAnswerClick = (answer) => {\n //     setSelectedAnswer(answer);\n //   };\n //   useEffect(() => {\n //     if (selectedAnswer !== '') {\n //       handleNextQuestion();\n //     }\n //   }, [selectedAnswer]);\n //   const handleNextQuestion = async () => {\n //     if (currentQuestion < questions.length - 1) {\n //       setUserAnswers([...userAnswers, selectedAnswer]);\n //       setSelectedAnswer('');\n //       setCurrentQuestion(currentQuestion + 1);\n //     } else {\n //         setUserAnswers([...userAnswers, selectedAnswer]); // Update userAnswers\n //         setSelectedAnswer('');\n //         setCurrentQuestion(0);\n //         setQuestionsAnswered(true); // Mark all questions answered\n //         setLoadingRandomMovie(true);\n //         fetchRandomMovie();\n //     //   setCurrentQuestion(0);\n //     //   setUserAnswers([]);\n //     // const response = await axios.post('api/get-movie-recommendation', {answers: userAnswers});\n //     // const recommendedMovie = response.data.recommendedMovie;\n //     // setRecommendedMovie(recommendedMovie);\n //     // setShowRecommendation(true);\n //     }\n //   };\n //   const handleGetYourMovie = () => {\n //     setShowRecommendation(true);\n //     setIsModalVisible(true)\n //   };\n // const getRandomMovie = () => {\n //     axios.get('http://localhost:8000/api/get_random_movie/')\n //       .then(response => {\n //         const results = response.data.results;\n //         const randomIndex = Math.floor(Math.random() * results.length);\n //         setRandomMovie(results[randomIndex]);\n //         setShowRandomMovie(true);\n //       })\n //       .catch(error => {\n //         console.error(error);\n //       });\n //   };\n //   return (\n //     <div style={{\n //       backgroundImage: 'url(\"https://media.istockphoto.com/id/177274717/photo/abstract-multimedia-background-composed-of-many-images-with-copy.jpg?s=612x612&w=0&k=20&c=V0G4Z-glNKzuI1ZvQMObi3_0PuxUHOqzur7d5LXB29U=\")',\n //       backgroundSize: 'cover',\n //       backgroundPosition: 'center',\n //       minHeight: '100vh',\n //       display: 'flex',\n //       flexDirection: 'column',\n //       justifyContent: 'center',\n //       alignItems: 'center',\n //       color: \"white\",\n //     }}>\n //       <Navigation />\n //       <div className=\"container-fluid ${showMovieData ? 'show-movie-info' : ''}\">\n //         <div className=\"card\" style={{\n //           padding: \"10px\",\n //           textAlign: 'center',\n //           backgroundColor: '#1F5D57',\n //           color: '#CBB26A'\n //         }}>\n // {questionsAnswered && showRandomMovie && randomMovie ? (\n //             <div className=\"movie-info\">\n //               <div className=\"modal-content\" style={{ display: 'flex', flexDirection: \"column\", alignItems: 'center', justifyContent: 'center'}}>\n //                 <div className=\"modal-header\">\n //                   <h2>Your Random Movie Is:</h2>\n //                 </div>\n //                 <div className=\"modal-body\" style={{ display: 'flex', flexDirection: \"column\", alignItems: 'center', justifyContent: 'center'}}>\n //                   <p>{randomMovie.titleText.text}</p>\n //                   <p>Year of Release: {randomMovie.releaseYear.year}</p>\n //                   <img src={randomMovie.primaryImage.url} alt=\"Movie Poster\" style={{maxWidth: '200px', maxHeight: '200px'}}></img>\n //                 </div>\n //                 <div className=\"modal-footer\" style={{ display: 'flex', flexDirection: \"column\", alignItems: 'center', justifyContent: 'center'}}>\n //                   <button style={{ margin: '10px'}} onClick={() => setShowRandomMovie(false)}>Close</button>\n //                 </div>\n //               </div>\n //             </div>\n //           ) : (\n //             <div>\n //               <h2 className=\"card-title\">{questions[currentQuestion]}</h2>\n //               <div className=\"answers\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n //                 {answers[currentQuestion].map((answer, index) => (\n //                   <button style={{ width: '200px', padding: \"5px\", margin: \"4px\", backgroundColor: '#CBB26A' }}\n //                     key={index}\n //                     className={`answer-button ${selectedAnswer === answer ? 'selected' : ''}`}\n //                     onClick={() => handleAnswerClick(answer)}\n //                   >\n //                     {answer}\n //                   </button>\n //                 ))}\n //               </div>\n //               <button\n //                 className=\"btn-circle\"\n //                 style={{\n //                   backgroundColor: '#CBB26A',\n //                   width: '200px',\n //                   padding: '10px',\n //                   margin: '0 auto',\n //                   display: 'block',\n //                   border: \"solid #CBB26A\"\n //                 }}\n //                 onClick={currentQuestion === questions.length - 1 ? getRandomMovie : handleNextQuestion}\n //               >\n //                 {currentQuestion === questions.length - 1 ? \"Get Random Movie\": 'Next'}\n //               </button>\n //             </div>\n //           )}\n //       </div>\n //     </div>\n //   </div>\n // );}\n // export default QAForm;\n //             {/* <h2 className=\"card-title\">{questions[currentQuestion]}</h2>\n //             <div className=\"answers\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n //             {answers[currentQuestion].map((answer, index) => (\n //                     <button style={{ width: '200px', padding: \"5px\", margin: \"4px\", backgroundColor: '#CBB26A' }}\n //                     key={index}\n //                     className={`answer-button ${selectedAnswer === answer ? 'selected' : ''}`}\n //                     onClick={() => handleAnswerClick(answer)}\n //                   >\n //                     {answer}\n //                   </button>\n //                 ))}\n //                 </div>\n //           <h2 className=\"card-title\">Your Movie Recommendations</h2>\n //           <p>Answer the questions to get a random movie recommendation.</p>\n //           <button\n //             className=\"btn-circle\"\n //             style={{\n //               backgroundColor: '#CBB26A',\n //               width: '200px',\n //               padding: '10px',\n //               margin: '0 auto',\n //               display: 'block',\n //               border: \"solid #CBB26A\"\n //             }}\n //             onClick={currentQuestion === questions.length - 1 ? getRandomMovie : handleNextQuestion}\n //           >\n //             {currentQuestion === questions.length - 1 ? \"Get Random Movie\": 'Next'}\n //           </button>\n //         </div>\n //       </div>\n //       {showRandomMovie && randomMovie && (\n //         <div className=\"movie-info\">\n //           <div className=\"modal-content\" style={{ display: 'flex', flexDirection: \"column\", alignItems: 'center', justifyContent: 'center'}}>\n //             <div className=\"modal-header\">\n //               <h2>Your Random Movie Is:</h2>\n //             </div>\n //             <div className=\"modal-body\" style={{ display: 'flex', flexDirection: \"column\", alignItems: 'center', justifyContent: 'center'}}>\n //               <p>{randomMovie.titleText.text}</p>\n //               <p>Year of Release: {randomMovie.releaseYear.year}</p>\n //             <img src={randomMovie.primaryImage.url} alt=\"Movie Poster\" style={{maxWidth: '200px', maxHeight: '200px'}}></img>\n //             </div>\n //             <div className=\"modal-footer\" style={{ display: 'flex', flexDirection: \"column\", alignItems: 'center', justifyContent: 'center'}}>\n //               <button style={{ margin: '10px'}} onClick={() => setShowRandomMovie(false)}>Close</button>\n //             </div>\n //           </div>\n //         </div>\n //       )}\n //     </div>\n //   );\n // }; */}\n //   // First Try-------------------------------------------------------------------------------------\n // // <div className=\"container-fluid\">\n // //         <div className=\"card\" style={{ padding: \"10px\", textAlign: 'center', backgroundColor: '#1F5D57', color: '#CBB26A' }}>\n // //           <h2 className=\"card-title\">{questions[currentQuestion]}</h2>\n // //           <div className=\"answers\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n // //             {answers[currentQuestion].map((answer, index) => (\n // //                     <button style={{ width: '200px', padding: \"5px\", margin: \"4px\", backgroundColor: '#CBB26A' }}\n // //                     key={index}\n // //                     className={`answer-button ${selectedAnswer === answer ? 'selected' : ''}`}\n // //                     onClick={() => handleAnswerClick(answer)}\n // //                   >\n // //                     {answer}\n // //                   </button>\n // //             ))}\n // //           </div>\n // //           <br />\n // //           <button className=\"btn-circle\"\n // //             style={{ backgroundColor: '#CBB26A', width: '120px', padding: '10px', margin: '0 auto', display: 'block', border: \"solid #CBB26A\" }}\n // //             onClick={handleNextQuestion}>\n // //             {currentQuestion === questions.length - 1 ? \"Get Your Movie\" : \"Next\"}\n // //           </button>\n // //         </div>\n // //       </div>\n // //       {isModalVisible && showRecommendation && recommendedMovie && (\n // //         <div className=\"movie-info\">\n // //           <div className=\"modal-content\">\n // //             <div className=\"modal-header\">\n // //               <h2>Your Random Movie Is:</h2>\n // //             </div>\n // //             <div className=\"modal-body\">\n // //               <p>{randomMovie.titleText.text}</p>\n // //             </div>\n // //             <div className=\"modal-footer\">\n // //               <button onClick={() => setIsModalVisible(false)}>Close</button>\n // //             </div>\n // //           </div>\n // //         </div>\n // //       )}\n // //       {/* <div className=\"container-fluid\">\n // //         <div className=\"card\" style={{ padding: \"10px\", textAlign: 'center', backgroundColor: '#1F5D57',\n // //         color: '#CBB26A' }}>\n // //           <h2 className=\"card-title\">{questions[currentQuestion]}</h2>\n // //           <div className=\"answers\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n // //             {answers[currentQuestion].map((answer, index) => (\n // //               <button style={{ width: '200px', padding: \"5px\", margin: \"4px\", backgroundColor: '#CBB26A' }}\n // //                 key={index}\n // //                 className={`answer-button ${selectedAnswer === answer ? 'selected' : ''}`}\n // //                 onClick={() => handleAnswerClick(answer)}\n // //               >\n // //                 {answer}\n // //               </button>\n // //             ))}\n // //           </div>\n // //           <br />\n // //           <button className=\"btn-circle\"\n // //           style={{ backgroundColor: '#CBB26A', width: '120px',\n // //           padding: '10px',\n // //           margin: '0 auto',\n // //           display: 'block',\n // //           border: \"solid #CBB26A\",\n // //         }} */}\n // //           {/* onClick={handleNextQuestion}>\n // //             {currentQuestion === questions.length - 1 ? \"Restart\" : \"Next\"}\n // //           </button>\n // //         </div>\n // //       </div>\n // //       {showRecommendation && recommendedMovie && (\n // //         <div> */}\n // //         {/* <FinalRecommendation recommendedMovie={recommendedMovie} />\n // //         <button className='btn btn-primary' onClick={handleGetYourMovie}>Get Your Movie</button>\n // //         </div>\n // //       )}\n // //     </div> */}\n // //     </div>\n // //   );\n // // };\nvar _c;\n$RefreshReg$(_c, \"QAForm\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pages/form/index.js\n"));

/***/ })

});